xxxxxxxx v0.9  Implement a CANopen driver subclass of OcDevice that can be subclassed for a specific driver or implement it some other way, maybe by a class that uses an OcDevice
                                Make an OpenCAN logo and put it on the home page - need something for the Testbench icon!
                                Add MacCAN plugin (http://www.mac-can.com)
                                Add can4linux plugin (http://sourceforge.net/projects/can4linux/)
                                Add ability to switch between current multiple windows and one window with tabs
                                Create a binary installer for at least Windows
                                Create unit tests for OpenCAN, plugins and possibly or maybe later Testbench
                                Add multithreaded autonomous mode for OcDevices
                                Add ability to create OcDevices that use events or interrupts in autonomous mode to emit the messageReceived signal instead of using a timer (polling)
                                Add support for printing
                                Add help to Testbench
                                Add support for detecting hardware and bus errors reported by drivers like PCAN (pro?)
                                Add auto-detection of CAN devices, at least to Testbench, e.g., how many of the 8 PCAN-USB devices are connected to the PC
                                Add support for multiple PCAN devices in PCAN-Basic device plugin
                                Consider an OpenCAN Enterprise and an OpenCAN Embedded similar to and to coincide with the Qt products
                                Add ability to Testbench to write a "script" of messages to send (maybe pro), e.g.:
                                    Send <Message 1> at 500ms into script
                                    Send <Message 2> every 10ms
                                    ...
                                    Later allow for more "dynamic scripts" that can send a message in response to a message, possibly with a calculation of the received data (pro)
                                    Also later, add something like unit tests: scripts for sending and expected responses that can validate a system (pro)
                                    Also later, breakpoints during playback
                                Create bindings for other languages, e.g., Python, Java, etc.? (pro?)
                                Show an icon (or text symbol) next to connected devices in the device drop down, or make a new UI to show them all at once
                                Let plugins in the application path override any global (like Qt does for translations, unless it does something different for plugins)
                                Smooth scroll receive window like the SyntaxHighlighter example (http://stackoverflow.com/questions/14719523/qt-textedit-smooth-scrolling)
                                Need to be able to setup hardware CAN message queues - maybe for Pro?
                                For Testbench Pro (look at difference between PCAN-View and PCAN-Explorer)
                                    Implement a J1939 window that displays the values received from a J1939 device (CANalyzer)
                                    Implement graphs of J1939 data like RPM and vehicle speed or any CAN data
                                    Implement multiple simultaneous filters
                                    Implement visualizations of CAN data, e.g., a graph of the value of byte 0 over time
                                    Implement a simple way to visually build a test state machine for Testbench, e.g., like BusTest or varying vehicle speed
                                    Error counters and transmit/receive stats
                                    Develop the CTIS SAL into a library for building system-independent application code for embedded devices
                                        Then sell with Testbench Pro or make open source
                                        There is likely stuff out there like this
                                        How can this fit into CreateX? Is it related to the way to "visually build a test state machine for TestBench"?
                                    Maybe incorporate the newer device plugins
